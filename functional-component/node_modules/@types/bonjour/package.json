eSymbolTable();
          hasComputedStringProperty = false;
          hasComputedNumberProperty = false;
          hasComputedSymbolProperty = false;
        }
        const type = getReducedType(checkExpression(memberDecl.expression));
        if (isValidSpreadType(type)) {
          const mergedType = tryMergeUnionOfObjectTypeAndEmptyObject(type, inConstContext);
          if (allPropertiesTable) {
            checkSpreadPropOverrides(mergedType, allPropertiesTable, memberDecl);
          }
          offset = propertiesArray.length;
          if (isErrorType(spread)) {
            continue;
          }
          spread = getSpreadType(spread, mergedType, node.symbol, objectFlags, inConstContext);
        } else {
          error(memberDecl, Diagnostics.Spread_types_may_only_be_created_from_object_types);
      